{"ast":null,"code":"var _jsxFileName = \"/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/MealPage.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// // import MealPlan from '../components/MealPlan';\n// // import RatingForm from '../components/RatingForm';\n\n// // const MealPage = ({ userId, goal, onLogout }) => {\n// //   const [mealPlan, setMealPlan] = useState(null);\n// //   const [day, setDay] = useState(1);\n// //   const [isInitialized, setIsInitialized] = useState(false);\n\n// //   useEffect(() => {\n// //     initializeMealPlan();\n// //   }, []);\n\n// //   const initializeMealPlan = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/initialize', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, goal }),\n// //       });\n\n// //       if (response.ok) {\n// //         setIsInitialized(true);\n// //         fetchMealPlan();\n// //       }\n// //     } catch (error) {\n// //       console.error('Initialization failed:', error);\n// //     }\n// //   };\n\n// //   const fetchMealPlan = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, goal }),\n// //       });\n// //       const data = await response.json();\n// //       setMealPlan(data);\n// //     } catch (error) {\n// //       console.error('Failed to fetch meal plan:', error);\n// //     }\n// //   };\n\n// //   const handleRatingSubmit = async (ratings) => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/updateRatings', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, ratings }),\n// //       });\n\n// //       if (response.ok) {\n// //         setDay(prev => prev + 1);\n// //         fetchMealPlan();\n// //       }\n// //     } catch (error) {\n// //       console.error('Failed to submit ratings:', error);\n// //     }\n// //   };\n\n// //   // If not initialized, show goal selection\n// //   if (!isInitialized) {\n// //     return (\n// //       <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n// //         <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\">\n// //           <h2 className=\"text-xl font-bold mb-4\">Initializing Meal Plan</h2>\n// //           <p className=\"text-gray-600 mb-4\">Please wait while we prepare your personalized meal plan...</p>\n// //           <button\n// //             onClick={onLogout}\n// //             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\"\n// //           >\n// //             Cancel\n// //           </button>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-100 p-8\">\n// //       <div className=\"flex justify-between items-center mb-8\">\n// //         <h1 className=\"text-3xl font-bold\">Day {day}</h1>\n// //         <div className=\"flex space-x-4\">\n// //           <Link \n// //             to=\"/nutrition\" \n// //             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n// //           >\n// //             Nutrition Analysis\n// //           </Link>\n// //           <button\n// //             onClick={onLogout}\n// //             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n// //           >\n// //             Logout\n// //           </button>\n// //         </div>\n// //       </div>\n// //       <div className='grid grid-cols-2 justify-center'>\n// //         <div className=\"max-w-2xl mx-12\">\n// //             {mealPlan && (\n// //             <>\n// //                 <MealPlan mealPlan={mealPlan} />\n// //                 <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n// //             </>\n// //             )}\n// //         </div>\n// //         <div className=\"max-w-2xl mx-12\">\n// //             <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n// //             <iframe className='h-36'></iframe>\n// //         </div>\n// //       </div>  \n// //     </div>\n// //   );\n// // };\n\n// // export default MealPage;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import MealPlan from '../components/MealPlan';\n// import RatingForm from '../components/RatingForm';\n\n// const MealPage = ({ userId, goal, onLogout }) => {\n//   const [mealPlan, setMealPlan] = useState(null);\n//   const [day, setDay] = useState(1);\n//   const [isInitialized, setIsInitialized] = useState(false);\n\n//   useEffect(() => {\n//     initializeMealPlan();\n//   }, []);\n\n//   const initializeMealPlan = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/initialize', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, goal }),\n//       });\n\n//       if (response.ok) {\n//         setIsInitialized(true);\n//         fetchMealPlan();\n//       }\n//     } catch (error) {\n//       console.error('Initialization failed:', error);\n//     }\n//   };\n\n//   const fetchMealPlan = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, goal }),\n//       });\n//       const data = await response.json();\n//       setMealPlan(data);\n//     } catch (error) {\n//       console.error('Failed to fetch meal plan:', error);\n//     }\n//   };\n\n//   const handleRatingSubmit = async (ratings) => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/updateRatings', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, ratings }),\n//       });\n\n//       if (response.ok) {\n//         setDay(prev => prev + 1);\n//         fetchMealPlan();\n//       }\n//     } catch (error) {\n//       console.error('Failed to submit ratings:', error);\n//     }\n//   };\n\n//   // If not initialized, show goal selection\n//   if (!isInitialized) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n//         <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\">\n//           <h2 className=\"text-xl font-bold mb-4\">Initializing Meal Plan</h2>\n//           <p className=\"text-gray-600 mb-4\">Please wait while we prepare your personalized meal plan...</p>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\"\n//           >\n//             Cancel\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Day {day}</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/nutrition\" \n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Nutrition Analysis\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n//       <div className='grid grid-cols-2 justify-center'>\n//         <div className=\"max-w-2xl mx-12\">\n//             {mealPlan && (\n//             <>\n//                 <MealPlan mealPlan={mealPlan} />\n//                 <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n//             </>\n//             )}\n//         </div>\n//         <div className=\"max-w-2xl mx-12\">\n//             <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n//             <iframe className='h-36 bg-white'></iframe>\n//         </div>\n//       </div>  \n//     </div>\n//   );\n// };\n\n// export default MealPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MealPlan from '../components/MealPlan';\nimport RatingForm from '../components/RatingForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealPage = ({\n  userId,\n  goal,\n  onLogout\n}) => {\n  _s();\n  const [mealPlan, setMealPlan] = useState(null);\n  const [day, setDay] = useState(1);\n  const [isInitialized, setIsInitialized] = useState(false);\n  useEffect(() => {\n    initializeMealPlan();\n  }, []);\n  const initializeMealPlan = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          goal\n        })\n      });\n      if (response.ok) {\n        setIsInitialized(true);\n        fetchMealPlan();\n      }\n    } catch (error) {\n      console.error('Initialization failed:', error);\n    }\n  };\n\n  //   const fetchMealPlan = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' },\n  //         body: JSON.stringify({ userId, goal }),\n  //       });\n  //       const data = await response.json();\n  //       setMealPlan(data);\n  //     } catch (error) {\n  //       console.error('Failed to fetch meal plan:', error);\n  //     }\n  //   };\n  const fetchMealPlan = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/getMealPlan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          goal\n        })\n      });\n      const data = await response.json();\n\n      // Ensure mealPlan structure\n      setMealPlan({\n        breakfast: data.breakfast || {\n          cluster: null\n        },\n        lunch: data.lunch || {\n          cluster: null\n        },\n        dinner: data.dinner || {\n          cluster: null\n        }\n      });\n    } catch (error) {\n      console.error('Failed to fetch meal plan:', error);\n    }\n  };\n  const handleRatingSubmit = async ratings => {\n    try {\n      const response = await fetch('http://localhost:5001/api/updateRatings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          ratings\n        })\n      });\n      if (response.ok) {\n        setDay(prev => prev + 1);\n        fetchMealPlan();\n      }\n    } catch (error) {\n      console.error('Failed to submit ratings:', error);\n    }\n  };\n\n  // If not initialized, show goal selection\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Initializing Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: \"Please wait while we prepare your personalized meal plan...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: [\"Day \", day]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/nutrition\",\n          className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Nutrition Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-12\",\n        children: mealPlan && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MealPlan, {\n            mealPlan: mealPlan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(RatingForm, {\n            mealPlan: mealPlan,\n            onSubmitRatings: handleRatingSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-12\",\n        children: [/*#__PURE__*/_jsxDEV(RatingForm, {\n          mealPlan: mealPlan,\n          onSubmitRatings: handleRatingSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"h-36 bg-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n};\n_s(MealPage, \"5PPKMmTRK/ELI1mx/d5imi9SaPA=\");\n_c = MealPage;\nexport default MealPage;\nvar _c;\n$RefreshReg$(_c, \"MealPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","MealPlan","RatingForm","jsxDEV","_jsxDEV","Fragment","_Fragment","MealPage","userId","goal","onLogout","_s","mealPlan","setMealPlan","day","setDay","isInitialized","setIsInitialized","initializeMealPlan","response","fetch","method","headers","body","JSON","stringify","ok","fetchMealPlan","error","console","data","json","breakfast","cluster","lunch","dinner","handleRatingSubmit","ratings","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","onSubmitRatings","_c","$RefreshReg$"],"sources":["/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/MealPage.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// // import MealPlan from '../components/MealPlan';\n// // import RatingForm from '../components/RatingForm';\n\n// // const MealPage = ({ userId, goal, onLogout }) => {\n// //   const [mealPlan, setMealPlan] = useState(null);\n// //   const [day, setDay] = useState(1);\n// //   const [isInitialized, setIsInitialized] = useState(false);\n\n// //   useEffect(() => {\n// //     initializeMealPlan();\n// //   }, []);\n\n// //   const initializeMealPlan = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/initialize', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, goal }),\n// //       });\n\n// //       if (response.ok) {\n// //         setIsInitialized(true);\n// //         fetchMealPlan();\n// //       }\n// //     } catch (error) {\n// //       console.error('Initialization failed:', error);\n// //     }\n// //   };\n\n// //   const fetchMealPlan = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, goal }),\n// //       });\n// //       const data = await response.json();\n// //       setMealPlan(data);\n// //     } catch (error) {\n// //       console.error('Failed to fetch meal plan:', error);\n// //     }\n// //   };\n\n// //   const handleRatingSubmit = async (ratings) => {\n// //     try {\n// //       const response = await fetch('http://localhost:5001/api/updateRatings', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify({ userId, ratings }),\n// //       });\n      \n// //       if (response.ok) {\n// //         setDay(prev => prev + 1);\n// //         fetchMealPlan();\n// //       }\n// //     } catch (error) {\n// //       console.error('Failed to submit ratings:', error);\n// //     }\n// //   };\n\n// //   // If not initialized, show goal selection\n// //   if (!isInitialized) {\n// //     return (\n// //       <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n// //         <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\">\n// //           <h2 className=\"text-xl font-bold mb-4\">Initializing Meal Plan</h2>\n// //           <p className=\"text-gray-600 mb-4\">Please wait while we prepare your personalized meal plan...</p>\n// //           <button\n// //             onClick={onLogout}\n// //             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\"\n// //           >\n// //             Cancel\n// //           </button>\n// //         </div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-100 p-8\">\n// //       <div className=\"flex justify-between items-center mb-8\">\n// //         <h1 className=\"text-3xl font-bold\">Day {day}</h1>\n// //         <div className=\"flex space-x-4\">\n// //           <Link \n// //             to=\"/nutrition\" \n// //             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n// //           >\n// //             Nutrition Analysis\n// //           </Link>\n// //           <button\n// //             onClick={onLogout}\n// //             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n// //           >\n// //             Logout\n// //           </button>\n// //         </div>\n// //       </div>\n// //       <div className='grid grid-cols-2 justify-center'>\n// //         <div className=\"max-w-2xl mx-12\">\n// //             {mealPlan && (\n// //             <>\n// //                 <MealPlan mealPlan={mealPlan} />\n// //                 <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n// //             </>\n// //             )}\n// //         </div>\n// //         <div className=\"max-w-2xl mx-12\">\n// //             <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n// //             <iframe className='h-36'></iframe>\n// //         </div>\n// //       </div>  \n// //     </div>\n// //   );\n// // };\n\n// // export default MealPage;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import MealPlan from '../components/MealPlan';\n// import RatingForm from '../components/RatingForm';\n\n// const MealPage = ({ userId, goal, onLogout }) => {\n//   const [mealPlan, setMealPlan] = useState(null);\n//   const [day, setDay] = useState(1);\n//   const [isInitialized, setIsInitialized] = useState(false);\n\n//   useEffect(() => {\n//     initializeMealPlan();\n//   }, []);\n\n//   const initializeMealPlan = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/initialize', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, goal }),\n//       });\n\n//       if (response.ok) {\n//         setIsInitialized(true);\n//         fetchMealPlan();\n//       }\n//     } catch (error) {\n//       console.error('Initialization failed:', error);\n//     }\n//   };\n\n//   const fetchMealPlan = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, goal }),\n//       });\n//       const data = await response.json();\n//       setMealPlan(data);\n//     } catch (error) {\n//       console.error('Failed to fetch meal plan:', error);\n//     }\n//   };\n\n//   const handleRatingSubmit = async (ratings) => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/updateRatings', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, ratings }),\n//       });\n      \n//       if (response.ok) {\n//         setDay(prev => prev + 1);\n//         fetchMealPlan();\n//       }\n//     } catch (error) {\n//       console.error('Failed to submit ratings:', error);\n//     }\n//   };\n\n//   // If not initialized, show goal selection\n//   if (!isInitialized) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n//         <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\">\n//           <h2 className=\"text-xl font-bold mb-4\">Initializing Meal Plan</h2>\n//           <p className=\"text-gray-600 mb-4\">Please wait while we prepare your personalized meal plan...</p>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\"\n//           >\n//             Cancel\n//           </button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Day {day}</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/nutrition\" \n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Nutrition Analysis\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n//       <div className='grid grid-cols-2 justify-center'>\n//         <div className=\"max-w-2xl mx-12\">\n//             {mealPlan && (\n//             <>\n//                 <MealPlan mealPlan={mealPlan} />\n//                 <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n//             </>\n//             )}\n//         </div>\n//         <div className=\"max-w-2xl mx-12\">\n//             <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n//             <iframe className='h-36 bg-white'></iframe>\n//         </div>\n//       </div>  \n//     </div>\n//   );\n// };\n\n// export default MealPage;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MealPlan from '../components/MealPlan';\nimport RatingForm from '../components/RatingForm';\n\nconst MealPage = ({ userId, goal, onLogout }) => {\n  const [mealPlan, setMealPlan] = useState(null);\n  const [day, setDay] = useState(1);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    initializeMealPlan();\n  }, []);\n\n  const initializeMealPlan = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/initialize', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId, goal }),\n      });\n\n      if (response.ok) {\n        setIsInitialized(true);\n        fetchMealPlan();\n      }\n    } catch (error) {\n      console.error('Initialization failed:', error);\n    }\n  };\n\n//   const fetchMealPlan = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5001/api/getMealPlan', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ userId, goal }),\n//       });\n//       const data = await response.json();\n//       setMealPlan(data);\n//     } catch (error) {\n//       console.error('Failed to fetch meal plan:', error);\n//     }\n//   };\nconst fetchMealPlan = async () => {\n  try {\n    const response = await fetch('http://localhost:5001/api/getMealPlan', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId, goal }),\n    });\n    const data = await response.json();\n\n    // Ensure mealPlan structure\n    setMealPlan({\n      breakfast: data.breakfast || { cluster: null },\n      lunch: data.lunch || { cluster: null },\n      dinner: data.dinner || { cluster: null },\n    });\n  } catch (error) {\n    console.error('Failed to fetch meal plan:', error);\n  }\n};\n\n  const handleRatingSubmit = async (ratings) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/updateRatings', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId, ratings }),\n      });\n      \n      if (response.ok) {\n        setDay(prev => prev + 1);\n        fetchMealPlan();\n      }\n    } catch (error) {\n      console.error('Failed to submit ratings:', error);\n    }\n  };\n\n  // If not initialized, show goal selection\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96\">\n          <h2 className=\"text-xl font-bold mb-4\">Initializing Meal Plan</h2>\n          <p className=\"text-gray-600 mb-4\">Please wait while we prepare your personalized meal plan...</p>\n          <button\n            onClick={onLogout}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-full\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Day {day}</h1>\n        <div className=\"flex space-x-4\">\n          <Link \n            to=\"/nutrition\" \n            className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Nutrition Analysis\n          </Link>\n          <button\n            onClick={onLogout}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n      <div className='grid grid-cols-2 justify-center'>\n        <div className=\"max-w-2xl mx-12\">\n            {mealPlan && (\n            <>\n                <MealPlan mealPlan={mealPlan} />\n                <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n            </>\n            )}\n        </div>\n        <div className=\"max-w-2xl mx-12\">\n            <RatingForm mealPlan={mealPlan} onSubmitRatings={handleRatingSubmit} />\n            <iframe className='h-36 bg-white'></iframe>\n        </div>\n      </div>  \n    </div>\n  );\n};\n\nexport default MealPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}