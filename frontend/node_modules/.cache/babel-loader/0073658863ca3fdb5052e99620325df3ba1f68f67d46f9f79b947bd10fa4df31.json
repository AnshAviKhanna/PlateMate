{"ast":null,"code":"var _jsxFileName = \"/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/NutritionPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const NutritionPage = ({ userId, onLogout }) => {\n//   const [ingredients, setIngredients] = useState(['']);\n//   const [nutritionResult, setNutritionResult] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleIngredientChange = (index, value) => {\n//     const newIngredients = [...ingredients];\n//     newIngredients[index] = value;\n//     setIngredients(newIngredients);\n//   };\n\n//   const addIngredient = () => {\n//     setIngredients([...ingredients, '']);\n//   };\n\n//   const removeIngredient = (index) => {\n//     const newIngredients = ingredients.filter((_, i) => i !== index);\n//     setIngredients(newIngredients);\n//   };\n\n//   const fetchNutritionData = async () => {\n//     setIsLoading(true);\n//     setNutritionResult(null);\n//     setError(null);\n\n//     const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details?force=true&beta=true';\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n//         'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         ingr: ingredients.filter(ing => ing.trim() !== '')\n//       })\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       const result = await response.json();\n//         console.log(result);\n\n//       // Check if the response contains expected data\n//       if (response.ok && result) {\n//         setNutritionResult(result);\n//       } else {\n//         throw new Error('Invalid nutrition data received');\n//       }\n//     } catch (error) {\n//       console.error('Nutrition analysis error:', error);\n//       setError(error.message || 'Failed to analyze nutrition');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   // Safe nutrition value extraction\n//   const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n//     return nutrients && nutrients[key] \n//       ? Math.round(nutrients[key].quantity) \n//       : defaultValue;\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/recommend\" \n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Meal Recommendations\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <div className=\"mb-4\">\n//           {ingredients.map((ingredient, index) => (\n//             <div key={index} className=\"flex mb-2\">\n//               <input\n//                 type=\"text\"\n//                 value={ingredient}\n//                 onChange={(e) => handleIngredientChange(index, e.target.value)}\n//                 placeholder=\"Enter ingredient (e.g., 1 apple, 2 tbsp olive oil)\"\n//                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mr-2\"\n//               />\n//               {ingredients.length > 1 && (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => removeIngredient(index)}\n//                   className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//                 >\n//                   Remove\n//                 </button>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"flex space-x-4\">\n//           <button\n//             onClick={addIngredient}\n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Add Ingredient\n//           </button>\n//           <button\n//             onClick={fetchNutritionData}\n//             disabled={isLoading || ingredients.every(ing => ing.trim() === '')}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n//           </button>\n//         </div>\n\n//         {error && (\n//           <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//             <strong className=\"font-bold\">Error: </strong>\n//             <span className=\"block sm:inline\">{error}</span>\n//           </div>\n//         )}\n\n//         {nutritionResult && (\n//           <div className=\"mt-6\">\n//             <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n//             <div className=\"grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n//                 <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n//                 <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n//                 <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n//               </div>\n//               <div>\n//                 <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n//                 <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n//                 <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default NutritionPage;\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionPage = ({\n  userId,\n  onLogout\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [nutritionResult, setNutritionResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleIngredientChange = value => {\n    setIngredients(value);\n  };\n\n  // Safe nutrition value extraction\n  const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n    return nutrients && nutrients[key] ? Math.round(nutrients[key].quantity) : defaultValue;\n  };\n  const fetchNutritionData = async () => {\n    setIsLoading(true);\n    setNutritionResult(null);\n    setError(null);\n\n    // Improved ingredient processing\n    const processedIngredients = ingredients.split('\\n').map(ing => ing.trim()).filter(ing => ing !== '').map(ing => {\n      // Standardize ingredient format\n      // Remove extra spaces, ensure quantity is before ingredient name\n      return ing.replace(/\\s+/g, ' ').trim();\n    });\n    const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details';\n    const options = {\n      method: 'POST',\n      headers: {\n        'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n        'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ingr: processedIngredients\n      })\n    };\n    try {\n      const response = await fetch(url, options);\n\n      // Get the response text to log full error details\n      const responseText = await response.text();\n\n      // Try to parse the response\n      let result;\n      try {\n        result = JSON.parse(responseText);\n      } catch (parseError) {\n        throw new Error(`Failed to parse response: ${responseText}`);\n      }\n\n      // Check for specific error conditions\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to fetch nutrition data');\n      }\n\n      // Validate expected nutrition data structure\n      if (!result.calories || !result.totalNutrients) {\n        throw new Error('Incomplete nutrition data received');\n      }\n      setNutritionResult(result);\n    } catch (error) {\n      console.error('Nutrition analysis full error:', error);\n      setError(error.message || 'Failed to analyze nutrition');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Nutrition Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/recommend\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Meal Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ingredients,\n          onChange: e => handleIngredientChange(e.target.value),\n          placeholder: \"Enter ingredients (one per line)\\nExample:\\n1 cup soy milk\\n1/2 cup rolled oats\\n14 frozen strawberries\\n1 banana\\n1 tsp sugar (optional)\\n1/2 tsp vanilla extract (optional)\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 h-24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchNutritionData,\n          disabled: isLoading || ingredients.trim() === '',\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\",\n          children: isLoading ? 'Analyzing...' : 'Analyze Nutrition'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"font-bold\",\n          children: \"Error: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), nutritionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Nutrition Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Calories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 20\n              }, this), \" \", Math.round(nutritionResult.calories || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Fat:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Protein:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Carbohydrates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Cholesterol:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE'), \" mg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sodium:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'NA'), \" mg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sugar:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(NutritionPage, \"fKhKNCeKPFKVqVEYG2GFg6Fn+84=\");\n_c = NutritionPage;\nexport default NutritionPage;\nvar _c;\n$RefreshReg$(_c, \"NutritionPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","NutritionPage","userId","onLogout","_s","ingredients","setIngredients","nutritionResult","setNutritionResult","error","setError","isLoading","setIsLoading","handleIngredientChange","value","getSafeNutrientValue","nutrients","key","defaultValue","Math","round","quantity","fetchNutritionData","processedIngredients","split","map","ing","trim","filter","replace","url","options","method","headers","body","JSON","stringify","ingr","response","fetch","responseText","text","result","parse","parseError","Error","ok","message","calories","totalNutrients","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","onChange","e","target","placeholder","disabled","role","_c","$RefreshReg$"],"sources":["/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/NutritionPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const NutritionPage = ({ userId, onLogout }) => {\n//   const [ingredients, setIngredients] = useState(['']);\n//   const [nutritionResult, setNutritionResult] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleIngredientChange = (index, value) => {\n//     const newIngredients = [...ingredients];\n//     newIngredients[index] = value;\n//     setIngredients(newIngredients);\n//   };\n\n//   const addIngredient = () => {\n//     setIngredients([...ingredients, '']);\n//   };\n\n//   const removeIngredient = (index) => {\n//     const newIngredients = ingredients.filter((_, i) => i !== index);\n//     setIngredients(newIngredients);\n//   };\n\n//   const fetchNutritionData = async () => {\n//     setIsLoading(true);\n//     setNutritionResult(null);\n//     setError(null);\n\n//     const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details?force=true&beta=true';\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n//         'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         ingr: ingredients.filter(ing => ing.trim() !== '')\n//       })\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       const result = await response.json();\n//         console.log(result);\n      \n//       // Check if the response contains expected data\n//       if (response.ok && result) {\n//         setNutritionResult(result);\n//       } else {\n//         throw new Error('Invalid nutrition data received');\n//       }\n//     } catch (error) {\n//       console.error('Nutrition analysis error:', error);\n//       setError(error.message || 'Failed to analyze nutrition');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   // Safe nutrition value extraction\n//   const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n//     return nutrients && nutrients[key] \n//       ? Math.round(nutrients[key].quantity) \n//       : defaultValue;\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/recommend\" \n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Meal Recommendations\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <div className=\"mb-4\">\n//           {ingredients.map((ingredient, index) => (\n//             <div key={index} className=\"flex mb-2\">\n//               <input\n//                 type=\"text\"\n//                 value={ingredient}\n//                 onChange={(e) => handleIngredientChange(index, e.target.value)}\n//                 placeholder=\"Enter ingredient (e.g., 1 apple, 2 tbsp olive oil)\"\n//                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mr-2\"\n//               />\n//               {ingredients.length > 1 && (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => removeIngredient(index)}\n//                   className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//                 >\n//                   Remove\n//                 </button>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"flex space-x-4\">\n//           <button\n//             onClick={addIngredient}\n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Add Ingredient\n//           </button>\n//           <button\n//             onClick={fetchNutritionData}\n//             disabled={isLoading || ingredients.every(ing => ing.trim() === '')}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n//           </button>\n//         </div>\n\n//         {error && (\n//           <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//             <strong className=\"font-bold\">Error: </strong>\n//             <span className=\"block sm:inline\">{error}</span>\n//           </div>\n//         )}\n\n//         {nutritionResult && (\n//           <div className=\"mt-6\">\n//             <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n//             <div className=\"grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n//                 <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n//                 <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n//                 <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n//               </div>\n//               <div>\n//                 <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n//                 <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n//                 <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default NutritionPage;\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NutritionPage = ({ userId, onLogout }) => {\n  const [ingredients, setIngredients] = useState('');\n  const [nutritionResult, setNutritionResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleIngredientChange = (value) => {\n    setIngredients(value);\n  };\n\n  // Safe nutrition value extraction\n  const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n    return nutrients && nutrients[key] \n      ? Math.round(nutrients[key].quantity) \n      : defaultValue;\n  };\n\n  const fetchNutritionData = async () => {\n    setIsLoading(true);\n    setNutritionResult(null);\n    setError(null);\n\n    // Improved ingredient processing\n    const processedIngredients = ingredients\n      .split('\\n')\n      .map(ing => ing.trim())\n      .filter(ing => ing !== '')\n      .map(ing => {\n        // Standardize ingredient format\n        // Remove extra spaces, ensure quantity is before ingredient name\n        return ing.replace(/\\s+/g, ' ').trim();\n      });\n\n    const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details';\n    const options = {\n      method: 'POST',\n      headers: {\n        'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n        'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ingr: processedIngredients\n      })\n    };\n\n    try {\n      const response = await fetch(url, options);\n      \n      // Get the response text to log full error details\n      const responseText = await response.text();\n      \n      // Try to parse the response\n      let result;\n      try {\n        result = JSON.parse(responseText);\n      } catch (parseError) {\n        throw new Error(`Failed to parse response: ${responseText}`);\n      }\n\n      // Check for specific error conditions\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to fetch nutrition data');\n      }\n\n      // Validate expected nutrition data structure\n      if (!result.calories || !result.totalNutrients) {\n        throw new Error('Incomplete nutrition data received');\n      }\n\n      setNutritionResult(result);\n    } catch (error) {\n      console.error('Nutrition analysis full error:', error);\n      setError(error.message || 'Failed to analyze nutrition');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n        <div className=\"flex space-x-4\">\n          <Link \n            to=\"/recommend\" \n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Meal Recommendations\n          </Link>\n          <button\n            onClick={onLogout}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"mb-4\">\n          <textarea\n            value={ingredients}\n            onChange={(e) => handleIngredientChange(e.target.value)}\n            placeholder=\"Enter ingredients (one per line)\nExample:\n1 cup soy milk\n1/2 cup rolled oats\n14 frozen strawberries\n1 banana\n1 tsp sugar (optional)\n1/2 tsp vanilla extract (optional)\"\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 h-24\"\n          />\n        </div>\n        <div className=\"flex space-x-4\">\n          <button\n            onClick={fetchNutritionData}\n            disabled={isLoading || ingredients.trim() === ''}\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n          >\n            {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <strong className=\"font-bold\">Error: </strong>\n            <span className=\"block sm:inline\">{error}</span>\n          </div>\n        )}\n\n        {nutritionResult && (\n          <div className=\"mt-6\">\n            <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n                <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n                <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n                <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n              </div>\n              <div>\n                <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n                <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n                <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NutritionPage;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,sBAAsB,GAAIC,KAAK,IAAK;IACxC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}