{"ast":null,"code":"var _jsxFileName = \"/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/NutritionPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const NutritionPage = ({ userId, onLogout }) => {\n//   const [ingredients, setIngredients] = useState(['']);\n//   const [nutritionResult, setNutritionResult] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleIngredientChange = (index, value) => {\n//     const newIngredients = [...ingredients];\n//     newIngredients[index] = value;\n//     setIngredients(newIngredients);\n//   };\n\n//   const addIngredient = () => {\n//     setIngredients([...ingredients, '']);\n//   };\n\n//   const removeIngredient = (index) => {\n//     const newIngredients = ingredients.filter((_, i) => i !== index);\n//     setIngredients(newIngredients);\n//   };\n\n//   const fetchNutritionData = async () => {\n//     setIsLoading(true);\n//     setNutritionResult(null);\n//     setError(null);\n\n//     const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details?force=true&beta=true';\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n//         'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         ingr: ingredients.filter(ing => ing.trim() !== '')\n//       })\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       const result = await response.json();\n//         console.log(result);\n\n//       // Check if the response contains expected data\n//       if (response.ok && result) {\n//         setNutritionResult(result);\n//       } else {\n//         throw new Error('Invalid nutrition data received');\n//       }\n//     } catch (error) {\n//       console.error('Nutrition analysis error:', error);\n//       setError(error.message || 'Failed to analyze nutrition');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   // Safe nutrition value extraction\n//   const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n//     return nutrients && nutrients[key] \n//       ? Math.round(nutrients[key].quantity) \n//       : defaultValue;\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/recommend\" \n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Meal Recommendations\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <div className=\"mb-4\">\n//           {ingredients.map((ingredient, index) => (\n//             <div key={index} className=\"flex mb-2\">\n//               <input\n//                 type=\"text\"\n//                 value={ingredient}\n//                 onChange={(e) => handleIngredientChange(index, e.target.value)}\n//                 placeholder=\"Enter ingredient (e.g., 1 apple, 2 tbsp olive oil)\"\n//                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mr-2\"\n//               />\n//               {ingredients.length > 1 && (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => removeIngredient(index)}\n//                   className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//                 >\n//                   Remove\n//                 </button>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"flex space-x-4\">\n//           <button\n//             onClick={addIngredient}\n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Add Ingredient\n//           </button>\n//           <button\n//             onClick={fetchNutritionData}\n//             disabled={isLoading || ingredients.every(ing => ing.trim() === '')}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n//           </button>\n//         </div>\n\n//         {error && (\n//           <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//             <strong className=\"font-bold\">Error: </strong>\n//             <span className=\"block sm:inline\">{error}</span>\n//           </div>\n//         )}\n\n//         {nutritionResult && (\n//           <div className=\"mt-6\">\n//             <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n//             <div className=\"grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n//                 <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n//                 <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n//                 <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n//               </div>\n//               <div>\n//                 <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n//                 <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n//                 <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default NutritionPage;\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NutritionPage = ({\n  userId,\n  onLogout\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [nutritionResult, setNutritionResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // API Configuration - DO NOT expose API keys in production\n  const RAPIDAPI_KEY = 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae';\n  const RAPIDAPI_HOST = 'edamam-edamam-nutrition-analysis.p.rapidapi.com';\n  const handleIngredientChange = value => {\n    setIngredients(value);\n  };\n  const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n    return nutrients && nutrients[key] ? Math.round(nutrients[key].quantity) : defaultValue;\n  };\n  const fetchNutritionData = async () => {\n    // Reset state\n    setIsLoading(true);\n    setNutritionResult(null);\n    setError(null);\n\n    // Process ingredients\n    const processedIngredients = ingredients.split('\\n').map(ing => ing.trim()).filter(ing => ing !== '');\n    const url = `http://api.edmam.com/api/nutrition-details?app`;\n    const options = {\n      method: 'POST',\n      headers: {\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ingr: processedIngredients\n      })\n    };\n    try {\n      console.log('Ingredients:', processedIngredients);\n      console.log('API Key:', RAPIDAPI_KEY);\n      const response = await fetch(url, options);\n      if (response.status === 401) {\n        console.error('Authentication Error:', response);\n        throw new Error('API Authentication Failed. Please check your RapidAPI key.');\n      }\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Error Response:', errorText);\n        throw new Error(`API Request Failed: ${errorText}`);\n      }\n      const result = await response.json();\n      console.log('API Response:', result);\n      if (!result.calories || !result.totalNutrients) {\n        throw new Error('Incomplete nutrition data received');\n      }\n      setNutritionResult(result);\n    } catch (error) {\n      console.error('Fetch Error:', error);\n      setError(error.message || 'Failed to analyze nutrition');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Nutrition Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/recommend\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Meal Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"font-bold\",\n          children: \"Error: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: ingredients,\n          onChange: e => handleIngredientChange(e.target.value),\n          placeholder: \"Enter ingredients (one per line)\\nExample:\\n1 cup soy milk\\n1/2 cup rolled oats\\n14 frozen strawberries\\n1 banana\\n1 tsp sugar (optional)\\n1/2 tsp vanilla extract (optional)\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 h-24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchNutritionData,\n          disabled: isLoading || ingredients.trim() === '',\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\",\n          children: isLoading ? 'Analyzing...' : 'Analyze Nutrition'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), nutritionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Nutrition Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Calories:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 20\n              }, this), \" \", Math.round(nutritionResult.calories || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Fat:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Protein:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Carbohydrates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Cholesterol:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE'), \" mg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sodium:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'NA'), \" mg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sugar:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 20\n              }, this), \" \", getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR'), \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(NutritionPage, \"fKhKNCeKPFKVqVEYG2GFg6Fn+84=\");\n_c = NutritionPage;\nexport default NutritionPage;\nvar _c;\n$RefreshReg$(_c, \"NutritionPage\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","NutritionPage","userId","onLogout","_s","ingredients","setIngredients","nutritionResult","setNutritionResult","error","setError","isLoading","setIsLoading","RAPIDAPI_KEY","RAPIDAPI_HOST","handleIngredientChange","value","getSafeNutrientValue","nutrients","key","defaultValue","Math","round","quantity","fetchNutritionData","processedIngredients","split","map","ing","trim","filter","url","options","method","headers","body","JSON","stringify","ingr","console","log","response","fetch","status","Error","ok","errorText","text","result","json","calories","totalNutrients","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","role","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/frontend/src/components/NutritionPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const NutritionPage = ({ userId, onLogout }) => {\n//   const [ingredients, setIngredients] = useState(['']);\n//   const [nutritionResult, setNutritionResult] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleIngredientChange = (index, value) => {\n//     const newIngredients = [...ingredients];\n//     newIngredients[index] = value;\n//     setIngredients(newIngredients);\n//   };\n\n//   const addIngredient = () => {\n//     setIngredients([...ingredients, '']);\n//   };\n\n//   const removeIngredient = (index) => {\n//     const newIngredients = ingredients.filter((_, i) => i !== index);\n//     setIngredients(newIngredients);\n//   };\n\n//   const fetchNutritionData = async () => {\n//     setIsLoading(true);\n//     setNutritionResult(null);\n//     setError(null);\n\n//     const url = 'https://edamam-edamam-nutrition-analysis.p.rapidapi.com/api/nutrition-details?force=true&beta=true';\n//     const options = {\n//       method: 'POST',\n//       headers: {\n//         'x-rapidapi-key': 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae',\n//         'x-rapidapi-host': 'edamam-edamam-nutrition-analysis.p.rapidapi.com',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\n//         ingr: ingredients.filter(ing => ing.trim() !== '')\n//       })\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       const result = await response.json();\n//         console.log(result);\n      \n//       // Check if the response contains expected data\n//       if (response.ok && result) {\n//         setNutritionResult(result);\n//       } else {\n//         throw new Error('Invalid nutrition data received');\n//       }\n//     } catch (error) {\n//       console.error('Nutrition analysis error:', error);\n//       setError(error.message || 'Failed to analyze nutrition');\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   // Safe nutrition value extraction\n//   const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n//     return nutrients && nutrients[key] \n//       ? Math.round(nutrients[key].quantity) \n//       : defaultValue;\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-8\">\n//       <div className=\"flex justify-between items-center mb-8\">\n//         <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n//         <div className=\"flex space-x-4\">\n//           <Link \n//             to=\"/recommend\" \n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Meal Recommendations\n//           </Link>\n//           <button\n//             onClick={onLogout}\n//             className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <div className=\"mb-4\">\n//           {ingredients.map((ingredient, index) => (\n//             <div key={index} className=\"flex mb-2\">\n//               <input\n//                 type=\"text\"\n//                 value={ingredient}\n//                 onChange={(e) => handleIngredientChange(index, e.target.value)}\n//                 placeholder=\"Enter ingredient (e.g., 1 apple, 2 tbsp olive oil)\"\n//                 className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mr-2\"\n//               />\n//               {ingredients.length > 1 && (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => removeIngredient(index)}\n//                   className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n//                 >\n//                   Remove\n//                 </button>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"flex space-x-4\">\n//           <button\n//             onClick={addIngredient}\n//             className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n//           >\n//             Add Ingredient\n//           </button>\n//           <button\n//             onClick={fetchNutritionData}\n//             disabled={isLoading || ingredients.every(ing => ing.trim() === '')}\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n//           >\n//             {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n//           </button>\n//         </div>\n\n//         {error && (\n//           <div className=\"mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n//             <strong className=\"font-bold\">Error: </strong>\n//             <span className=\"block sm:inline\">{error}</span>\n//           </div>\n//         )}\n\n//         {nutritionResult && (\n//           <div className=\"mt-6\">\n//             <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n//             <div className=\"grid grid-cols-2 gap-4\">\n//               <div>\n//                 <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n//                 <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n//                 <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n//                 <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n//               </div>\n//               <div>\n//                 <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n//                 <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n//                 <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default NutritionPage;\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NutritionPage = ({ userId, onLogout }) => {\n  const [ingredients, setIngredients] = useState('');\n  const [nutritionResult, setNutritionResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // API Configuration - DO NOT expose API keys in production\n  const RAPIDAPI_KEY = 'a466765c53msh018fb07080bc15ep191a73jsn96306fb334ae';\n  const RAPIDAPI_HOST = 'edamam-edamam-nutrition-analysis.p.rapidapi.com';\n\n  const handleIngredientChange = (value) => {\n    setIngredients(value);\n  };\n\n  const getSafeNutrientValue = (nutrients, key, defaultValue = 0) => {\n    return nutrients && nutrients[key] \n      ? Math.round(nutrients[key].quantity) \n      : defaultValue;\n  };\n\n  const fetchNutritionData = async () => {\n    // Reset state\n    setIsLoading(true);\n    setNutritionResult(null);\n    setError(null);\n\n    // Process ingredients\n    const processedIngredients = ingredients\n      .split('\\n')\n      .map(ing => ing.trim())\n      .filter(ing => ing !== '');\n\n    const url = `http://api.edmam.com/api/nutrition-details?app`;\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ingr: processedIngredients })\n    };\n\n    try {\n      console.log('Ingredients:', processedIngredients);\n      console.log('API Key:', RAPIDAPI_KEY);\n\n      const response = await fetch(url, options);\n\n      if (response.status === 401) {\n        console.error('Authentication Error:', response);\n        throw new Error('API Authentication Failed. Please check your RapidAPI key.');\n      }\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Error Response:', errorText);\n        throw new Error(`API Request Failed: ${errorText}`);\n      }\n\n      const result = await response.json();\n      console.log('API Response:', result);\n\n      if (!result.calories || !result.totalNutrients) {\n        throw new Error('Incomplete nutrition data received');\n      }\n\n      setNutritionResult(result);\n    } catch (error) {\n      console.error('Fetch Error:', error);\n      setError(error.message || 'Failed to analyze nutrition');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Nutrition Analysis</h1>\n        <div className=\"flex space-x-4\">\n          <Link \n            to=\"/recommend\" \n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Meal Recommendations\n          </Link>\n          <button\n            onClick={onLogout}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n            <strong className=\"font-bold\">Error: </strong>\n            <span>{error}</span>\n          </div>\n        )}\n\n        <div className=\"mb-4\">\n          <textarea\n            value={ingredients}\n            onChange={(e) => handleIngredientChange(e.target.value)}\n            placeholder=\"Enter ingredients (one per line)\nExample:\n1 cup soy milk\n1/2 cup rolled oats\n14 frozen strawberries\n1 banana\n1 tsp sugar (optional)\n1/2 tsp vanilla extract (optional)\"\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 h-24\"\n          />\n        </div>\n        <div className=\"flex space-x-4\">\n          <button\n            onClick={fetchNutritionData}\n            disabled={isLoading || ingredients.trim() === ''}\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50\"\n          >\n            {isLoading ? 'Analyzing...' : 'Analyze Nutrition'}\n          </button>\n        </div>\n\n        {nutritionResult && (\n          <div className=\"mt-6\">\n            <h2 className=\"text-xl font-bold mb-4\">Nutrition Details</h2>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p><strong>Total Calories:</strong> {Math.round(nutritionResult.calories || 0)}</p>\n                <p><strong>Total Fat:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'FAT')} g</p>\n                <p><strong>Total Protein:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'PROCNT')} g</p>\n                <p><strong>Total Carbohydrates:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOCDF')} g</p>\n              </div>\n              <div>\n                <p><strong>Cholesterol:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'CHOLE')} mg</p>\n                <p><strong>Sodium:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'NA')} mg</p>\n                <p><strong>Sugar:</strong> {getSafeNutrientValue(nutritionResult.totalNutrients, 'SUGAR')} g</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NutritionPage;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMgB,YAAY,GAAG,oDAAoD;EACzE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}