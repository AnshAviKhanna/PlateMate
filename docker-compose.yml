# services:
#   server:
#     image: anshavikhanna/platemate-backend:latest
#     container_name: myapp-node-server
#     ports:
#       - "5001:5001"
#     environment:
#       - NODE_ENV=development
#     networks:
#       - app-network
#     depends_on:
#       - client
#     volumes:
#       - node_modules:/app/node_modules
#     dns:
#       - 8.8.8.8  # Use Google's public DNS to ensure proper DNS resolution

#   client:
#     image: anshavikhanna/platemate-frontend:latest
#     container_name: myapp-react-client
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=development
#     networks:
#       - app-network
#     volumes:
#       - node_modules:/app/node_modules

# networks:
#   app-network:
#     driver: bridge

# volumes:
#   node_modules:

version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:5001
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    networks:
      - app-network
    environment:
      - LOGSTASH_HOST=logstash:5044
    depends_on:
      - logstash
    volumes:
      - /app/node_modules
      - /Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/app.log:/app/app.log

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - app-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash
    volumes:
      - /Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/app.log:/app/app.log
      - /Users/anshavikhanna/Desktop/SEM 7/SPE/PlateMate/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    environment:
      - xpack.monitoring.enabled=false
    networks:
      - app-network
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - app-network
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"    

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
  elasticsearch-data:
    driver: local